/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PromptImport } from './routes/prompt'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as NotesImport } from './routes/notes'
import { Route as JournalImport } from './routes/journal'
import { Route as IndexImport } from './routes/index'
import { Route as NotesNoteIdImport } from './routes/notes.$noteId'
import { Route as JournalEntryIdImport } from './routes/journal.$entryId'

// Create/Update Routes

const PromptRoute = PromptImport.update({
  id: '/prompt',
  path: '/prompt',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const NotesRoute = NotesImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => rootRoute,
} as any)

const JournalRoute = JournalImport.update({
  id: '/journal',
  path: '/journal',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NotesNoteIdRoute = NotesNoteIdImport.update({
  id: '/$noteId',
  path: '/$noteId',
  getParentRoute: () => NotesRoute,
} as any)

const JournalEntryIdRoute = JournalEntryIdImport.update({
  id: '/$entryId',
  path: '/$entryId',
  getParentRoute: () => JournalRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/journal': {
      id: '/journal'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof JournalImport
      parentRoute: typeof rootRoute
    }
    '/notes': {
      id: '/notes'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/prompt': {
      id: '/prompt'
      path: '/prompt'
      fullPath: '/prompt'
      preLoaderRoute: typeof PromptImport
      parentRoute: typeof rootRoute
    }
    '/journal/$entryId': {
      id: '/journal/$entryId'
      path: '/$entryId'
      fullPath: '/journal/$entryId'
      preLoaderRoute: typeof JournalEntryIdImport
      parentRoute: typeof JournalImport
    }
    '/notes/$noteId': {
      id: '/notes/$noteId'
      path: '/$noteId'
      fullPath: '/notes/$noteId'
      preLoaderRoute: typeof NotesNoteIdImport
      parentRoute: typeof NotesImport
    }
  }
}

// Create and export the route tree

interface JournalRouteChildren {
  JournalEntryIdRoute: typeof JournalEntryIdRoute
}

const JournalRouteChildren: JournalRouteChildren = {
  JournalEntryIdRoute: JournalEntryIdRoute,
}

const JournalRouteWithChildren =
  JournalRoute._addFileChildren(JournalRouteChildren)

interface NotesRouteChildren {
  NotesNoteIdRoute: typeof NotesNoteIdRoute
}

const NotesRouteChildren: NotesRouteChildren = {
  NotesNoteIdRoute: NotesNoteIdRoute,
}

const NotesRouteWithChildren = NotesRoute._addFileChildren(NotesRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/journal': typeof JournalRouteWithChildren
  '/notes': typeof NotesRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/prompt': typeof PromptRoute
  '/journal/$entryId': typeof JournalEntryIdRoute
  '/notes/$noteId': typeof NotesNoteIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/journal': typeof JournalRouteWithChildren
  '/notes': typeof NotesRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/prompt': typeof PromptRoute
  '/journal/$entryId': typeof JournalEntryIdRoute
  '/notes/$noteId': typeof NotesNoteIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/journal': typeof JournalRouteWithChildren
  '/notes': typeof NotesRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/prompt': typeof PromptRoute
  '/journal/$entryId': typeof JournalEntryIdRoute
  '/notes/$noteId': typeof NotesNoteIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/journal'
    | '/notes'
    | '/onboarding'
    | '/prompt'
    | '/journal/$entryId'
    | '/notes/$noteId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/journal'
    | '/notes'
    | '/onboarding'
    | '/prompt'
    | '/journal/$entryId'
    | '/notes/$noteId'
  id:
    | '__root__'
    | '/'
    | '/journal'
    | '/notes'
    | '/onboarding'
    | '/prompt'
    | '/journal/$entryId'
    | '/notes/$noteId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  JournalRoute: typeof JournalRouteWithChildren
  NotesRoute: typeof NotesRouteWithChildren
  OnboardingRoute: typeof OnboardingRoute
  PromptRoute: typeof PromptRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  JournalRoute: JournalRouteWithChildren,
  NotesRoute: NotesRouteWithChildren,
  OnboardingRoute: OnboardingRoute,
  PromptRoute: PromptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/journal",
        "/notes",
        "/onboarding",
        "/prompt"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/journal": {
      "filePath": "journal.tsx",
      "children": [
        "/journal/$entryId"
      ]
    },
    "/notes": {
      "filePath": "notes.tsx",
      "children": [
        "/notes/$noteId"
      ]
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/prompt": {
      "filePath": "prompt.tsx"
    },
    "/journal/$entryId": {
      "filePath": "journal.$entryId.tsx",
      "parent": "/journal"
    },
    "/notes/$noteId": {
      "filePath": "notes.$noteId.tsx",
      "parent": "/notes"
    }
  }
}
ROUTE_MANIFEST_END */
